/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.24
 * Generated at: 2018-06-11 13:25:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.login_005flogout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class registration_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
 request.setCharacterEncoding("utf-8"); 
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>회원가입</title>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function writeCheck(){\n");
      out.write("\tvar form = document.userForm;\n");
      out.write("\tvar emailExp = /[0-9a-zA-Z][_0-9a-zA-Z-]*@[_0-9a-zA-Z-]+(\\.[_0-9a-zA-Z-]+){1,2}$/;\n");
      out.write("\tvar phoneExp = /^[0-9]+$/;\n");
      out.write("\n");
      out.write("\tif(!form.name.value){\n");
      out.write("\t\talert(\"이름을 입력해 주세요!\");\n");
      out.write("\t\tform.name.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(!form.id.value){\n");
      out.write("\t\talert(\"ID를 입력해 주세요!\");\n");
      out.write("\t\tform.id.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif (!form.email.value.match(emailExp)) {\n");
      out.write("\t\talert(\"email형식이 올바르지 않습니다. 다시 확인해 주세요!\");\n");
      out.write("\t\tform.id.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\n");
      out.write("\tif(!form.pass1.value){\n");
      out.write("\t\talert(\"비밀번호를 입력해 주세요!\");\n");
      out.write("\t\tform.pass1.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(form.pass1.value != form.pass2.value){\n");
      out.write("\t\talert(\"비밀번호가 일치하지 않습니다. 다시 확인해 주세요!\");\n");
      out.write("\t\tform.pass2.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(!form.phone.value){\n");
      out.write("\t\talert(\"휴대폰 번호를 입력해 주세요!\");\n");
      out.write("\t\tform.phone.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif (!form.phone.value.match(phoneExp)) {\n");
      out.write("\t\talert(\"휴대폰 번호 형식이 올바르지 않습니다. 숫자 입력해 주세요!\");\n");
      out.write("\t\tform.phone.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(form.use.value == \"no\"){\n");
      out.write("\t\talert(\"이용약관에 동의해 주세요!\");\n");
      out.write("\t\tform.use.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\tif(form.info.value == \"no\"){\n");
      out.write("\t\talert(\"정보수집에 동의해 주세요!\");\n");
      out.write("\t\tform.info.focus();\n");
      out.write("\t\treturn;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tform.submit();\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("<center>\n");
      out.write("<h1>SIGN UP</h1>\n");
      out.write("\t<h4>회원정보를 입력하세요.</h4>\n");
      out.write("\t<form name=userForm method=post action=regConform.jsp>\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> 이름 </td>\n");
      out.write("\t\t\t\t<td> <input type=text name=\"name\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> ID </td>\n");
      out.write("\t\t\t\t<td> <input type=text name=\"id\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> email </td>\n");
      out.write("\t\t\t\t<td> <input type=text name=\"email\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> 암호 </td>\n");
      out.write("\t\t\t\t<td> <input type=password name=\"pass1\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> 암호 확인 </td>\n");
      out.write("\t\t\t\t<td> <input type=password name=\"pass2\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> 휴대폰번호 </td>\n");
      out.write("\t\t\t\t<td> <input type=text name=\"phone\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> Feedbap 이용약관<b>(필수)</b> </td>\n");
      out.write("\t\t\t\t<td> <input type=\"radio\" name=\"use\" value=\"ok\">동의 &nbsp;\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"use\" value=\"no\">비동의</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>Feedbap 정보수집<b>(필수)</b> </td>\n");
      out.write("\t\t\t\t<td> <input type=\"radio\" name=\"info\" value=\"ok\">동의 &nbsp;\n");
      out.write("\t\t\t\t <input type=\"radio\" name=\"info\" value=\"no\">비동의</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td> 프로모션 알림 메일 수신(선택) </td>\n");
      out.write("\t\t\t\t<td> <input type=\"radio\" name=\"pro\" value=\"ok\">동의 &nbsp;\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"pro\" value=\"no\">비동의</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td colspan=2>\n");
      out.write("\t\t\t\t<center>\n");
      out.write("\t\t\t\t<input type=\"button\" onclick=\"writeCheck();\" value=\"확인\">\n");
      out.write("\t\t\t\t<input type=reset value=\"취소\">\n");
      out.write("\t\t\t\t</center>\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</form>\n");
      out.write("\t<p>\n");
      out.write("\t<hr>\n");
      out.write("\t<a href=show.jsp> <font color=blue>내용저장 확인</font></a>\n");
      out.write("\n");
      out.write("\n");
      out.write("</center>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
